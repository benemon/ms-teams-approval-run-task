name: Python Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run every day at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: build/python
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-test.txt

    - name: Run tests with pytest
      run: |
          pytest --cov=app --cov-report=html --cov-report=xml --junitxml=pytest.xml tests/ -v
  
    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report-python-${{ matrix.python-version }}
        path: |
            build/python/.coverage
            build/python/htmlcov/
            build/python/coverage.xml
            if-no-files-found: ignore

    - name: Coverage report to PR comment
      if: github.event_name == 'pull_request' && matrix.python-version == '3.12'
      working-directory: build/python
      run: |
        coverage report
        coverage html

    - name: GitHub Action for pytest coverage comment
      if: github.event_name == 'pull_request' && matrix.python-version == '3.12'
      uses: MishaKav/pytest-coverage-comment@main
      with:
        pytest-coverage-path: ./build/python/htmlcov/index.html
        junitxml-path: ./build/python/pytest.xml

  build-and-push:
    needs: test  # This ensures all test matrix versions pass before building
    if: github.ref == 'refs/heads/main'  # Only run on main branch
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4

      - name: Debug directory contents
        run: |
          echo "Current directory:"
          pwd
          echo "Contents of current directory:"
          ls -la
          echo "Contents of build directory:"
          ls -la build/
      
      - name: Login to Quay.io
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}
      
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./build
          file: Containerfile  # Just the filename since context is set
          platforms: linux/amd64
          push: true
          tags: quay.io/benjamin_holmes/teams-approval-run-task:latest